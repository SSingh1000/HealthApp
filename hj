 getAlarm = () =>{
      let data =  (AsyncStorage.getItem('token_data'));
        let getAlarmPayload = 
        {
            userId: data.userId,
            
        }

        let httpRequest = 
        {
            method: 'post',
            body: JSON.stringify(getAlarmPayload),
            headers: {'Content-Type': 'application/json; charset=utf-8'}
        }

        fetch('https://health-n-wellness-prod.herokuapp.com/api/getAllUserScheduledAlarms', httpRequest)
        .then(this.checkResponse)
        .catch(function(error) { console.log(error); })
        .then(response => response.json())
        .then(responseData =>
        {
            if (responseData.error.length === 0)
            {
                let alarms = responseData.Alarms;
                return(alarms);
                console.log('Successfully deleted alarm!');
            }
            else
            {
                console.log('error' + " "+responseData.error);
            }
        });
        
    }

    checkResponse = (response) =>
{
    if (response.status >= 500)
    {
        console.log('Server Error: Did not get a valid response from server!');
        throw new Error('Invalid JSON from server - probably a server error');
    }

    return response;
}


===================

  <ScrollView>
                <Card style={styles.cards}>
                    <LinearGradient
                        colors={['#c6ffdd', '#fbd786','#f7797d']}
                        start={{ x: 0, y: 0 }}
                        end={{ x: 1, y: 1 }}
                    >
                <Card.Title
        
                    title="Prescription" 
                    left={LeftContent} 
                />
                <Card.Content>
                    <Title style={{textAlign:'center', bottom: 15, fontSize:24}}>{} </Title>
                    <Text style={{textAlign:'center'}}></Text>
                    </Card.Content>
                   
                    <Card.Actions style = {{justifyContent:'space-around'}}>
                        <Button onPress={() => this.props.navigation.navigate('Main')}>Delete</Button>
                        <Button>Alarm</Button>
                    </Card.Actions>
                </LinearGradient>
                </Card>
                </ScrollView>
               
                <TouchableOpacity onPress = {() => this.props.navigation.navigate('Main')}>
                 <View style={styles.action}>
                     <Feather
                        name="arrow-left-circle"
                        color="white"
                        size={40}
                    />
                </View>
                </TouchableOpacity>